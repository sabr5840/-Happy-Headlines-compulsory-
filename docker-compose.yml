version: '3.8'

services:
  # --- Regionale DB'er ---
  db_europe:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_europe
    volumes:
      - db-europe-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_asia:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_asia
    volumes:
      - db-asia-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_africa:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_africa
    volumes:
      - db-africa-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_northamerica:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_northamerica
    volumes:
      - db-northamerica-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_southamerica:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_southamerica
    volumes:
      - db-southamerica-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_oceania:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_oceania
    volumes:
      - db-oceania-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_antarctica:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_antarctica
    volumes:
      - db-antarctica-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  db_global:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_global
    volumes:
      - db-global-data:/var/lib/postgresql/data
      - ./db/article_init.sql:/docker-entrypoint-initdb.d/article_init.sql:ro

  # --- Jaeger (Tracing backend) ---
  jaeger:
    image: jaegertracing/all-in-one:1.54
    ports:
      - "16686:16686"   # UI
      - "14268:14268"   # HTTP ingest (Jaeger exporter)
    # bruger default-netværket (happyheadlines_net)

  # --- Services ---
  articleservice:
    build: ./microservice-article
    image: happyheadlines-articleservice:latest
    ports:
      - "3000:3000"
    environment:
      DB_USER: happy_user
      DB_PASSWORD: secretpassword
      # tracing                                  
      OTEL_SERVICE_NAME: articleservice          
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces  
    depends_on:
      - db_europe
      - db_asia
      - db_africa
      - db_northamerica
      - db_southamerica
      - db_oceania
      - db_antarctica
      - db_global
      - jaeger          

  comment_db:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_comments
    volumes:
      - comment-db-data:/var/lib/postgresql/data
      - ./db/comment_init.sql:/docker-entrypoint-initdb.d/comment_init.sql:ro

  commentservice:
    build: ./microservice-comment
    image: happyheadlines-commentservice:latest
    ports:
      - "3001:3001"
    environment:
      DB_USER: happy_user
      DB_PASSWORD: secretpassword
      DB_HOST: comment_db
      DB_NAME: happyheadlines_comments
      # tracing                                  
      OTEL_SERVICE_NAME: commentservice          
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      PROFANITY_URL: http://profanityservice:4000
    depends_on:
      - comment_db
      - jaeger          

  profanity_db:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_profanity
    volumes:
      - profanity-db-data:/var/lib/postgresql/data
      - ./db/profanity_init.sql:/docker-entrypoint-initdb.d/profanity_init.sql:ro

  profanityservice:
    build: ./microservice-profanity
    image: happyheadlines-profanityservice:latest
    ports:
      - "4000:4000"
    environment:
      DB_USER: happy_user
      DB_PASSWORD: secretpassword
      DB_HOST: profanity_db
      DB_NAME: happyheadlines_profanity
      # tracing                                  
      OTEL_SERVICE_NAME: profanityservice        
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces  
    depends_on:
      - profanity_db
      - jaeger          

  draft_db:
    image: postgres:15
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: happyheadlines_drafts
    volumes:
      - draft-db-data:/var/lib/postgresql/data
      - ./db/draft_init.sql:/docker-entrypoint-initdb.d/draft_init.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 20

  draftservice:
      build: ./microservice-draft
      image: happyheadlines-draftservice:latest
      volumes:
        - ./microservice-draft/logs:/app/logs
      ports:
        - "3002:3002"
      environment:
        DB_USER: happy_user
        DB_PASSWORD: secretpassword
        DB_HOST: draft_db
        DB_NAME: happyheadlines_drafts
        # tracing
        OTEL_SERVICE_NAME: draftservice
        JAEGER_ENDPOINT: http://jaeger:14268/api/traces
        # (valgfrit – hjælper fejlfinding)
        OTEL_LOG_LEVEL: info
      depends_on:
        draft_db:
          condition: service_healthy
        jaeger:
          condition: service_started
      restart: unless-stopped      

volumes:
  db-europe-data:
  db-asia-data:
  db-africa-data:
  db-northamerica-data:
  db-southamerica-data:
  db-oceania-data:
  db-antarctica-data:
  db-global-data:
  comment-db-data:
  profanity-db-data:
  draft-db-data:

networks:
  default:
    external: true
    name: happyheadlines_net
